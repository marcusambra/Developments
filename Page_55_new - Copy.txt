OBJECT Page 55 Purch. Invoice Subform
{
  OBJECT-PROPERTIES
  {
    Date=29/01/20;
    Time=13:55:58;
    Modified=Yes;
    Version List=NAVW114.00,NAVGB14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Lines;
               ENG=Lines];
    MultipleNewLines=Yes;
    LinksAllowed=No;
    SourceTable=Table39;
    DelayedInsert=Yes;
    SourceTableView=WHERE(Document Type=FILTER(Invoice));
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnInit=VAR
             ApplicationAreaMgmtFacade@1000 : Codeunit 9179;
           BEGIN
             PurchasesPayablesSetup.GET;
             Currency.InitRoundingPrecision;
             TempOptionLookupBuffer.FillBuffer(TempOptionLookupBuffer."Lookup Type"::Purchases);
             IsFoundation := ApplicationAreaMgmtFacade.IsFoundationEnabled;
           END;

    OnOpenPage=BEGIN
                 SetDimensionsVisibility;
               END;

    OnFindRecord=BEGIN
                   DocumentTotals.PurchaseCheckAndClearTotals(Rec,xRec,TotalPurchaseLine,VATAmount,InvoiceDiscountAmount,InvoiceDiscountPct);
                   EXIT(FIND(Which));
                 END;

    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                       UpdateTypeText;
                       SetItemChargeFieldsStyle;
                     END;

    OnNewRecord=VAR
                  ApplicationAreaMgmtFacade@1000 : Codeunit 9179;
                BEGIN
                  InitType;
                  // Default to Item for the first line and to previous line type for the others
                  IF ApplicationAreaMgmtFacade.IsFoundationEnabled THEN
                    IF xRec."Document No." = '' THEN
                      Type := Type::Item;

                  CLEAR(ShortcutDimCode);
                  UpdateTypeText;
                END;

    OnInsertRecord=BEGIN
                     UpdateTypeText;
                   END;

    OnModifyRecord=BEGIN
                     DocumentTotals.PurchaseCheckIfDocumentChanged(Rec,xRec);
                   END;

    OnDeleteRecord=VAR
                     ReservePurchLine@1000 : Codeunit 99000834;
                   BEGIN
                     IF (Quantity <> 0) AND ItemExists("No.") THEN BEGIN
                       COMMIT;
                       IF NOT ReservePurchLine.DeleteLineConfirm(Rec) THEN
                         EXIT(FALSE);
                       ReservePurchLine.DeleteLine(Rec);
                     END;
                     DocumentTotals.PurchaseDocTotalsNotUpToDate;
                   END;

    OnAfterGetCurrRecord=BEGIN
                           GetTotalPurchHeader;
                           CalculateTotals;
                           UpdateEditableOnRow;
                           UpdateTypeText;
                           SetItemChargeFieldsStyle;
                         END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 27      ;1   ;Action    ;
                      Name=SelectMultiItems;
                      AccessByPermission=TableData 27=R;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Select items;
                                 ENG=Select items];
                      ToolTipML=[ENU=Add two or more items from the full list of your inventory items.;
                                 ENG=Add two or more items from the full list of your inventory items.];
                      ApplicationArea=#Basic,#Suite;
                      Image=NewItem;
                      OnAction=BEGIN
                                 SelectMultipleItems;
                               END;
                                }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 ENG=&Line];
                      Image=Line }
      { 1906587504;2 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ENG=F&unctions];
                      Image=Action }
      { 1900205804;3 ;Action    ;
                      AccessByPermission=TableData 90=R;
                      CaptionML=[ENU=E&xplode BOM;
                                 ENG=E&xplode BOM];
                      ToolTipML=[ENU=Insert new lines for the components on the bill of materials, for example to sell the parent item as a kit. CAUTION: The line for the parent item will be deleted and represented by a description only. To undo, you must delete the component lines and add a line the parent item again.;
                                 ENG=Insert new lines for the components on the bill of materials, for example to sell the parent item as a kit. CAUTION: The line for the parent item will be deleted and represented by a description only. To undo, you must delete the component lines and add a line the parent item again.];
                      ApplicationArea=#Suite;
                      Image=ExplodeBOM;
                      OnAction=BEGIN
                                 ExplodeBOM;
                               END;
                                }
      { 1903099004;3 ;Action    ;
                      Name=InsertExtTexts;
                      AccessByPermission=TableData 279=R;
                      CaptionML=[ENU=Insert &Ext. Texts;
                                 ENG=Insert &Ext. Texts];
                      ToolTipML=[ENU=Insert the extended item description that is set up for the item that is being processed on the line.;
                                 ENG=Insert the extended item description that is set up for the item that is being processed on the line.];
                      ApplicationArea=#Suite;
                      Image=Text;
                      OnAction=BEGIN
                                 InsertExtendedText(TRUE);
                               END;
                                }
      { 1901652204;3 ;Action    ;
                      Name=GetReceiptLines;
                      AccessByPermission=TableData 120=R;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Get Receipt Lines;
                                 ENG=&Get Receipt Lines];
                      ToolTipML=[ENU=Select a posted purchase receipt for the item that you want to assign the item charge to.;
                                 ENG=Select a posted purchase receipt for the item that you want to assign the item charge to.];
                      ApplicationArea=#Suite;
                      Image=Receipt;
                      OnAction=BEGIN
                                 GetReceipt;
                               END;
                                }
      { 1904945204;2 ;ActionGroup;
                      CaptionML=[ENU=Item Availability by;
                                 ENG=Item Availability by];
                      Image=ItemAvailability }
      { 5       ;3   ;Action    ;
                      CaptionML=[ENU=Event;
                                 ENG=Event];
                      ToolTipML=[ENU=View how the actual and the projected available balance of an item will develop over time according to supply and demand events.;
                                 ENG=View how the actual and the projected available balance of an item will develop over time according to supply and demand events.];
                      ApplicationArea=#Basic,#Suite;
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByEvent)
                               END;
                                }
      { 1901092104;3 ;Action    ;
                      CaptionML=[ENU=Period;
                                 ENG=Period];
                      ToolTipML=[ENU=Show the projected quantity of the item over time according to time periods, such as day, week, or month.;
                                 ENG=Show the projected quantity of the item over time according to time periods, such as day, week, or month.];
                      ApplicationArea=#Basic,#Suite;
                      Image=Period;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByPeriod)
                               END;
                                }
      { 1905427604;3 ;Action    ;
                      CaptionML=[ENU=Variant;
                                 ENG=Variant];
                      ToolTipML=[ENU=View or edit the item's variants. Instead of setting up each color of an item as a separate item, you can set up the various colors as variants of the item.;
                                 ENG=View or edit the item's variants. Instead of setting up each colour of an item as a separate item, you can set up the various colours as variants of the item.];
                      ApplicationArea=#Planning;
                      Image=ItemVariant;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByVariant)
                               END;
                                }
      { 1907075804;3 ;Action    ;
                      AccessByPermission=TableData 14=R;
                      CaptionML=[ENU=Location;
                                 ENG=Location];
                      ToolTipML=[ENU=View the actual and projected quantity of the item per location.;
                                 ENG=View the actual and projected quantity of the item per location.];
                      ApplicationArea=#Location;
                      Image=Warehouse;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByLocation)
                               END;
                                }
      { 3       ;3   ;Action    ;
                      AccessByPermission=TableData 5870=R;
                      CaptionML=[ENU=BOM Level;
                                 ENG=BOM Level];
                      ToolTipML=[ENU=View availability figures for items on bills of materials that show how many units of a parent item you can make based on the availability of child items.;
                                 ENG=View availability figures for items on bills of materials that show how many units of a parent item you can make based on the availability of child items.];
                      ApplicationArea=#Assembly;
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByBOM)
                               END;
                                }
      { 35      ;2   ;ActionGroup;
                      CaptionML=[ENU=Related Information;
                                 ENG=Related Information] }
      { 1904974904;3 ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ENG=Dimensions];
                      ToolTipML=[ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                                 ENG=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyse transaction history.];
                      ApplicationArea=#Dimensions;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 1901431304;3 ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 ENG=Co&mments];
                      ToolTipML=[ENU=View or add comments for the record.;
                                 ENG=View or add comments for the record.];
                      ApplicationArea=#Comments;
                      Image=ViewComments;
                      OnAction=BEGIN
                                 ShowLineComments;
                               END;
                                }
      { 1907184504;3 ;Action    ;
                      Name=ItemChargeAssignment;
                      AccessByPermission=TableData 5800=R;
                      CaptionML=[ENU=Item Charge &Assignment;
                                 ENG=Item Charge &Assignment];
                      ToolTipML=[ENU=Assign additional direct costs, for example for freight, to the item on the line.;
                                 ENG=Assign additional direct costs, for example for freight, to the item on the line.];
                      ApplicationArea=#ItemCharges;
                      Image=ItemCosts;
                      OnAction=BEGIN
                                 ShowItemChargeAssgnt;
                                 SetItemChargeFieldsStyle;
                               END;
                                }
      { 1905987604;3 ;Action    ;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=[ENU=Item &Tracking Lines;
                                 ENG=Item &Tracking Lines];
                      ToolTipML=[ENU=View or edit serial numbers and lot numbers that are assigned to the item on the document or journal line.;
                                 ENG=View or edit serial numbers and lot numbers that are assigned to the item on the document or journal line.];
                      ApplicationArea=#ItemTracking;
                      Image=ItemTrackingLines;
                      OnAction=BEGIN
                                 OpenItemTrackingLines;
                               END;
                                }
      { 19      ;3   ;Action    ;
                      Name=DeferralSchedule;
                      CaptionML=[ENU=Deferral Schedule;
                                 ENG=Deferral Schedule];
                      ToolTipML=[ENU=View or edit the deferral schedule that governs how expenses incurred with this purchase document is deferred to different accounting periods when the document is posted.;
                                 ENG=View or edit the deferral schedule that governs how expenses incurred with this purchase document is deferred to different accounting periods when the document is posted.];
                      ApplicationArea=#Suite;
                      Enabled="Deferral Code" <> '';
                      Image=PaymentPeriod;
                      OnAction=BEGIN
                                 ShowDeferralSchedule;
                               END;
                                }
      { 1905403814;3 ;Action    ;
                      Name=DocAttach;
                      CaptionML=[ENU=Attachments;
                                 ENG=Attachments];
                      ToolTipML=[ENU=Add a file as an attachment. You can attach images as well as documents.;
                                 ENG=Add a file as an attachment. You can attach images as well as documents.];
                      ApplicationArea=#All;
                      Image=Attach;
                      OnAction=VAR
                                 DocumentAttachmentDetails@1000 : Page 1173;
                                 RecRef@1001 : RecordRef;
                               BEGIN
                                 RecRef.GETTABLE(Rec);
                                 DocumentAttachmentDetails.OpenForRecRef(RecRef);
                                 DocumentAttachmentDetails.RUNMODAL;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=PurchDetailLine;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the line type.;
                           ENG=Specifies the line type.];
                ApplicationArea=#Advanced;
                SourceExpr=Type;
                OnValidate=BEGIN
                             NoOnAfterValidate;

                             UpdateEditableOnRow;
                             UpdateTypeText;
                             DeltaUpdateTotals;
                           END;
                            }

    { 7   ;2   ;Field     ;
                Name=FilteredTypeField;
                CaptionML=[ENU=Type;
                           ENG=Type];
                ToolTipML=[ENU="Specifies the type of transaction that will be posted with the document line. If you select Comment, then you can enter any text in the Description field, such as a message to a customer. ";
                           ENG="Specifies the type of transaction that will be posted with the document line. If you select Comment, then you can enter any text in the Description field, such as a message to a customer. "];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TypeAsText;
                TableRelation="Option Lookup Buffer"."Option Caption" WHERE (Lookup Type=CONST(Purchases));
                Visible=IsFoundation;
                Editable=CurrPageIsEditable;
                LookupPageID=Option Lookup List;
                OnValidate=BEGIN
                             TempOptionLookupBuffer.SetCurrentType(Type);
                             IF TempOptionLookupBuffer.AutoCompleteOption(TypeAsText,TempOptionLookupBuffer."Lookup Type"::Purchases) THEN
                               VALIDATE(Type,TempOptionLookupBuffer.ID);
                             TempOptionLookupBuffer.ValidateOption(TypeAsText);
                             UpdateEditableOnRow;
                             UpdateTypeText;
                             DeltaUpdateTotals;
                           END;
                            }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of a general ledger account, an item, an additional cost or a fixed asset, depending on what you selected in the Type field.;
                           ENG=Specifies the number of a general ledger account, an item, an additional cost or a fixed asset, depending on what you selected in the Type field.];
                ApplicationArea=#All;
                SourceExpr="No.";
                OnValidate=BEGIN
                             ShowShortcutDimCode(ShortcutDimCode);
                             NoOnAfterValidate;

                             UpdateTypeText;
                             DeltaUpdateTotals;
                           END;

                ShowMandatory=Type <> Type::" " }

    { 72  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the cross-referenced item number. If you enter a cross reference between yours and your vendor's or customer's item number, then this number will override the standard item number when you enter the cross-reference number on a sales or purchase document.;
                           ENG=Specifies the cross-referenced item number. If you enter a cross reference between yours and your vendor's or customer's item number, then this number will override the standard item number when you enter the cross-reference number on a sales or purchase document.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Cross-Reference No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             NoOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           CrossReferenceNoLookUp;
                           NoOnAfterValidate;
                           OnCrossReferenceNoOnLookup(Rec);
                         END;
                          }

    { 186 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the intercompany partner that the transaction is related to if the entry was created from an intercompany transaction.;
                           ENG=Specifies the code of the intercompany partner that the transaction is related to if the entry was created from an intercompany transaction.];
                ApplicationArea=#Intercompany;
                SourceExpr="IC Partner Code";
                Visible=FALSE }

    { 82  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the item or account in your IC partner's company that corresponds to the item or account on the line.;
                           ENG=Specifies the item or account in your IC partner's company that corresponds to the item or account on the line.];
                ApplicationArea=#Intercompany;
                SourceExpr="IC Partner Ref. Type";
                Visible=FALSE }

    { 84  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the IC partner. If the line is being sent to one of your intercompany partners, this field is used together with the IC Partner Ref. Type field to indicate the item or account in your partner's company that corresponds to the line.;
                           ENG=Specifies the IC partner. If the line is being sent to one of your intercompany partners, this field is used together with the IC Partner Ref. Type field to indicate the item or account in your partner's company that corresponds to the line.];
                ApplicationArea=#Intercompany;
                SourceExpr="IC Partner Reference";
                Visible=FALSE }

    { 30  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the variant of the item on the line.;
                           ENG=Specifies the variant of the item on the line.];
                ApplicationArea=#Planning;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 74  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that this item is a catalog item.;
                           ENG=Specifies that this item is a catalogue item.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Nonstock;
                Visible=FALSE }

    { 10410090;2;Field    ;
                ToolTipML=[ENU=Specifies the VAT business posting group codes for customers and vendors, for VAT purposes. You can use these codes to distinguish between the types of customers and vendors.;
                           ENG=Specifies the VAT business posting group codes for customers and vendors, for VAT purposes. You can use these codes to distinguish between the types of customers and vendors.];
                SourceExpr="VAT Bus. Posting Group";
                Visible=FALSE }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the VAT product posting group. Links business transactions made for the item, resource, or G/L account with the general ledger, to account for VAT amounts resulting from trade with that record.;
                           ENG=Specifies the VAT product posting group. Links business transactions made for the item, resource, or G/L account with the general ledger, to account for VAT amounts resulting from trade with that record.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Prod. Posting Group";
                Visible=FALSE;
                OnValidate=BEGIN
                             DeltaUpdateTotals;
                           END;
                            }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=Description/Comment;
                           ENG=Description/Comment];
                ToolTipML=[ENU=Specifies a description of the entry of the product to be purchased. To add a non-transactional text line, fill in the Description field only.;
                           ENG=Specifies a description of the entry of the product to be purchased. To add a non-transactional text line, fill in the Description field only.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                OnValidate=BEGIN
                             UpdateEditableOnRow;

                             IF "No." = xRec."No." THEN
                               EXIT;

                             ShowShortcutDimCode(ShortcutDimCode);
                             NoOnAfterValidate;

                             UpdateTypeText;
                             DeltaUpdateTotals;
                           END;

                ShowMandatory=Type <> Type::" " }

    { 78  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code explaining why the item was returned.;
                           ENG=Specifies the code explaining why the item was returned.];
                ApplicationArea=#Suite;
                SourceExpr="Return Reason Code";
                Visible=FALSE }

    { 58  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the location where the items on the line will be located.;
                           ENG=Specifies the code for the location where the items on the line will be located.];
                ApplicationArea=#Location;
                SourceExpr="Location Code";
                Enabled=NOT (IsCommentLine OR IsBlankNumber);
                Editable=NOT (IsCommentLine OR IsBlankNumber) }

    { 80  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the bin where the items are picked or put away.;
                           ENG=Specifies the bin where the items are picked or put away.];
                ApplicationArea=#Warehouse;
                SourceExpr="Bin Code";
                Visible=FALSE }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of units of the item specified on the line.;
                           ENG=Specifies the number of units of the item specified on the line.];
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr=Quantity;
                Enabled=NOT (IsCommentLine OR IsBlankNumber);
                Editable=NOT (IsCommentLine OR IsBlankNumber);
                OnValidate=BEGIN
                             DeltaUpdateTotals;
                           END;

                ShowMandatory=(NOT IsCommentLine) AND ("No." <> '') }

    { 34  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.;
                           ENG=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit of Measure Code";
                Enabled=UnitofMeasureCodeIsChangeable;
                Editable=UnitofMeasureCodeIsChangeable;
                OnValidate=BEGIN
                             DeltaUpdateTotals;
                           END;
                            }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the unit of measure for the item, such as 1 bottle or 1 piece.;
                           ENG=Specifies the name of the unit of measure for the item, such as 1 bottle or 1 piece.];
                ApplicationArea=#Suite;
                SourceExpr="Unit of Measure";
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the cost of one unit of the selected item or resource.;
                           ENG=Specifies the cost of one unit of the selected item or resource.];
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr="Direct Unit Cost";
                Enabled=NOT (IsCommentLine OR IsBlankNumber);
                Editable=NOT (IsCommentLine OR IsBlankNumber);
                OnValidate=BEGIN
                             DeltaUpdateTotals;
                           END;

                ShowMandatory=(NOT IsCommentLine) AND ("No." <> '') }

    { 68  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the percentage of the item's last purchase cost that includes indirect costs, such as freight that is associated with the purchase of the item.;
                           ENG=Specifies the percentage of the item's last purchase cost that includes indirect costs, such as freight that is associated with the purchase of the item.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Indirect Cost %";
                Visible=FALSE }

    { 56  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the unit cost of the item on the line.;
                           ENG=Specifies the unit cost of the item on the line.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit Cost (LCY)";
                Visible=FALSE }

    { 66  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the price for one unit of the item.;
                           ENG=Specifies the price for one unit of the item.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit Price (LCY)";
                Visible=FALSE }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the discount percentage that is granted for the item on the line.;
                           ENG=Specifies the discount percentage that is granted for the item on the line.];
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr="Line Discount %";
                Enabled=NOT (IsCommentLine OR IsBlankNumber);
                Editable=NOT (IsCommentLine OR IsBlankNumber);
                OnValidate=BEGIN
                             DeltaUpdateTotals;
                           END;
                            }

    { 52  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the net amount, excluding any invoice discount amount, that must be paid for products on the line.;
                           ENG=Specifies the net amount, excluding any invoice discount amount, that must be paid for products on the line.];
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr="Line Amount";
                Enabled=NOT (IsCommentLine OR IsBlankNumber);
                Editable=NOT (IsCommentLine OR IsBlankNumber);
                OnValidate=BEGIN
                             DeltaUpdateTotals;
                           END;

                ShowMandatory=(NOT IsCommentLine) AND ("No." <> '') }

    { 48  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the discount amount that is granted for the item on the line.;
                           ENG=Specifies the discount amount that is granted for the item on the line.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Line Discount Amount";
                Visible=FALSE;
                OnValidate=BEGIN
                             DeltaUpdateTotals;
                           END;
                            }

    { 46  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the invoice line is included when the invoice discount is calculated.;
                           ENG=Specifies if the invoice line is included when the invoice discount is calculated.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Allow Invoice Disc.";
                Visible=FALSE;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             AmountWithDiscountAllowed := DocumentTotals.CalcTotalPurchAmountOnlyDiscountAllowed(Rec);
                             InvoiceDiscountAmount := ROUND(AmountWithDiscountAllowed * InvoiceDiscountPct / 100,Currency."Amount Rounding Precision");
                             ValidateInvoiceDiscountAmount;
                             DeltaUpdateTotals;
                           END;
                            }

    { 36  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the invoice discount amount for the line.;
                           ENG=Specifies the invoice discount amount for the line.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Inv. Discount Amount";
                Visible=FALSE;
                OnValidate=BEGIN
                             DeltaUpdateTotals;
                           END;
                            }

    { 32  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that you can assign item charges to this line.;
                           ENG=Specifies that you can assign item charges to this line.];
                ApplicationArea=#ItemCharges;
                SourceExpr="Allow Item Charge Assignment";
                Visible=FALSE }

    { 44  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many units of the item charge will be assigned to the line.;
                           ENG=Specifies how many units of the item charge will be assigned to the line.];
                ApplicationArea=#ItemCharges;
                SourceExpr="Qty. to Assign";
                StyleExpr=ItemChargeStyleExpression;
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD;
                              ShowItemChargeAssgnt;
                              UpdateForm(FALSE);
                            END;
                             }

    { 42  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how much of the item charge that has been assigned.;
                           ENG=Specifies how much of the item charge that has been assigned.];
                ApplicationArea=#ItemCharges;
                BlankZero=Yes;
                SourceExpr="Qty. Assigned";
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD;
                              ShowItemChargeAssgnt;
                              UpdateForm(FALSE);
                            END;
                             }

    { 38  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the related job. If you fill in this field and the Job Task No. field, then a job ledger entry will be posted together with the purchase line.;
                           ENG=Specifies the number of the related job. If you fill in this field and the Job Task No. field, then a job ledger entry will be posted together with the purchase line.];
                ApplicationArea=#Jobs;
                SourceExpr="Job No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             ShowShortcutDimCode(ShortcutDimCode);
                           END;
                            }

    { 90  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the related job task.;
                           ENG=Specifies the number of the related job task.];
                ApplicationArea=#Jobs;
                SourceExpr="Job Task No.";
                Visible=FALSE }

    { 86  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of planning line that was created when the job ledger entry is posted from the purchase line. If the field is empty, no planning lines were created for this entry.;
                           ENG=Specifies the type of planning line that was created when the job ledger entry is posted from the purchase line. If the field is empty, no planning lines were created for this entry.];
                ApplicationArea=#Jobs;
                SourceExpr="Job Line Type";
                Visible=FALSE }

    { 92  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the sales price per unit that applies to the item or general ledger expense that will be posted.;
                           ENG=Specifies the sales price per unit that applies to the item or general ledger expense that will be posted.];
                ApplicationArea=#Jobs;
                SourceExpr="Job Unit Price";
                Visible=FALSE }

    { 104 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the line amount of the job ledger entry that is related to the purchase line.;
                           ENG=Specifies the line amount of the job ledger entry that is related to the purchase line.];
                ApplicationArea=#Jobs;
                SourceExpr="Job Line Amount";
                Visible=FALSE }

    { 108 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the line discount amount of the job ledger entry that is related to the purchase line.;
                           ENG=Specifies the line discount amount of the job ledger entry that is related to the purchase line.];
                ApplicationArea=#Jobs;
                SourceExpr="Job Line Discount Amount";
                Visible=FALSE }

    { 106 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the line discount percentage of the job ledger entry that is related to the purchase line.;
                           ENG=Specifies the line discount percentage of the job ledger entry that is related to the purchase line.];
                ApplicationArea=#Jobs;
                SourceExpr="Job Line Discount %";
                Visible=FALSE }

    { 94  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the gross amount of the line that the purchase line applies to.;
                           ENG=Specifies the gross amount of the line that the purchase line applies to.];
                ApplicationArea=#Jobs;
                SourceExpr="Job Total Price";
                Visible=FALSE }

    { 96  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the sales price per unit that applies to the item or general ledger expense that will be posted.;
                           ENG=Specifies the sales price per unit that applies to the item or general ledger expense that will be posted.];
                ApplicationArea=#Jobs;
                SourceExpr="Job Unit Price (LCY)";
                Visible=FALSE }

    { 98  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the gross amount of the line, in the local currency.;
                           ENG=Specifies the gross amount of the line, in the local currency.];
                ApplicationArea=#Jobs;
                SourceExpr="Job Total Price (LCY)";
                Visible=FALSE }

    { 100 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the line amount of the job ledger entry that is related to the purchase line.;
                           ENG=Specifies the line amount of the job ledger entry that is related to the purchase line.];
                ApplicationArea=#Jobs;
                SourceExpr="Job Line Amount (LCY)";
                Visible=FALSE }

    { 102 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the line discount amount of the job ledger entry that is related to the purchase line.;
                           ENG=Specifies the line discount amount of the job ledger entry that is related to the purchase line.];
                ApplicationArea=#Jobs;
                SourceExpr="Job Line Disc. Amount (LCY)";
                Visible=FALSE }

    { 50  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the related production order.;
                           ENG=Specifies the number of the related production order.];
                ApplicationArea=#Manufacturing;
                SourceExpr="Prod. Order No.";
                Visible=FALSE }

    { 64  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the blanket order that the record originates from.;
                           ENG=Specifies the number of the blanket order that the record originates from.];
                ApplicationArea=#Suite;
                SourceExpr="Blanket Order No.";
                Visible=FALSE }

    { 70  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the blanket order line that the record originates from.;
                           ENG=Specifies the number of the blanket order line that the record originates from.];
                ApplicationArea=#Suite;
                SourceExpr="Blanket Order Line No.";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies an insurance number if you have selected the Acquisition Cost option in the FA Posting Type field.;
                           ENG=Specifies an insurance number if you have selected the Acquisition Cost option in the FA Posting Type field.];
                ApplicationArea=#FixedAssets;
                SourceExpr="Insurance No.";
                Visible=FALSE }

    { 28  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of a fixed asset with the Budgeted Asset check box selected. When you post the journal or document line, an additional entry is created for the budgeted fixed asset where the amount has the opposite sign.;
                           ENG=Specifies the number of a fixed asset with the Budgeted Asset check box selected. When you post the journal or document line, an additional entry is created for the budgeted fixed asset where the amount has the opposite sign.];
                ApplicationArea=#FixedAssets;
                SourceExpr="Budgeted FA No.";
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the FA posting type if you have selected Fixed Asset in the Type field for this line.;
                           ENG=Specifies the FA posting type if you have selected Fixed Asset in the Type field for this line.];
                ApplicationArea=#FixedAssets;
                SourceExpr="FA Posting Type";
                Visible=FALSE }

    { 26  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the depreciation book to which the line will be posted if you have selected Fixed Asset in the Type field for this line.;
                           ENG=Specifies the code for the depreciation book to which the line will be posted if you have selected Fixed Asset in the Type field for this line.];
                ApplicationArea=#FixedAssets;
                SourceExpr="Depreciation Book Code";
                Visible=FALSE }

    { 22  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if depreciation was calculated until the FA posting date of the line.;
                           ENG=Specifies if depreciation was calculated until the FA posting date of the line.];
                ApplicationArea=#FixedAssets;
                SourceExpr="Depr. until FA Posting Date";
                Visible=FALSE }

    { 24  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if, when this line was posted, the additional acquisition cost posted on the line was depreciated in proportion to the amount by which the fixed asset had already been depreciated.;
                           ENG=Specifies if, when this line was posted, the additional acquisition cost posted on the line was depreciated in proportion to the amount by which the fixed asset had already been depreciated.];
                ApplicationArea=#FixedAssets;
                SourceExpr="Depr. Acquisition Cost";
                Visible=FALSE }

    { 54  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a depreciation book code if you want the journal line to be posted to that depreciation book, as well as to the depreciation book in the Depreciation Book Code field.;
                           ENG=Specifies a depreciation book code if you want the journal line to be posted to that depreciation book, as well as to the depreciation book in the Depreciation Book Code field.];
                ApplicationArea=#FixedAssets;
                SourceExpr="Duplicate in Depreciation Book";
                Visible=FALSE }

    { 76  ;2   ;Field     ;
                ToolTipML=[ENU="Specifies, if the type is Fixed Asset, that information on the line is to be posted to all the assets defined depreciation books. ";
                           ENG="Specifies, if the type is Fixed Asset, that information on the line is to be posted to all the assets defined depreciation books. "];
                ApplicationArea=#FixedAssets;
                SourceExpr="Use Duplication List";
                Visible=FALSE }

    { 40  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the item ledger entry that the document or journal line is applied -to.;
                           ENG=Specifies the number of the item ledger entry that the document or journal line is applied -to.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Appl.-to Item Entry";
                Visible=FALSE }

    { 17  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the deferral template that governs how expenses paid with this purchase document are deferred to the different accounting periods when the expenses were incurred.;
                           ENG=Specifies the deferral template that governs how expenses paid with this purchase document are deferred to the different accounting periods when the expenses were incurred.];
                ApplicationArea=#Suite;
                SourceExpr="Deferral Code";
                TableRelation="Deferral Template"."Deferral Code";
                Visible=FALSE;
                Enabled=(Type <> Type::"Fixed Asset") AND (Type <> Type::" ");
                OnAssistEdit=BEGIN
                               ShowDeferralSchedule;
                             END;
                              }

    { 62  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for Shortcut Dimension 1, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                           ENG=Specifies the code for Shortcut Dimension 1, which is one of two global dimension codes that you set up in the General Ledger Setup window.];
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=DimVisible1 }

    { 60  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for Shortcut Dimension 2, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                           ENG=Specifies the code for Shortcut Dimension 2, which is one of two global dimension codes that you set up in the General Ledger Setup window.];
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=DimVisible2 }

    { 300 ;2   ;Field     ;
                Name=ShortcutDimCode3;
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(3),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=DimVisible3;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;
                            }

    { 302 ;2   ;Field     ;
                Name=ShortcutDimCode4;
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(4),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=DimVisible4;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;
                            }

    { 304 ;2   ;Field     ;
                Name=ShortcutDimCode5;
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(5),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=DimVisible5;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;
                            }

    { 306 ;2   ;Field     ;
                Name=ShortcutDimCode6;
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(6),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=DimVisible6;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;
                            }

    { 308 ;2   ;Field     ;
                Name=ShortcutDimCode7;
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(7),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=DimVisible7;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;
                            }

    { 310 ;2   ;Field     ;
                Name=ShortcutDimCode8;
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(8),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=DimVisible8;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;
                            }

    { 21  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the document number.;
                           ENG=Specifies the document number.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document No.";
                Visible=FALSE;
                Editable=FALSE }

    { 23  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the line's number.;
                           ENG=Specifies the line's number.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Line No.";
                Visible=FALSE;
                Editable=FALSE }

    { 100000000;2;Field   ;
                ApplicationArea=#all;
                SourceExpr="Order No." }

    { 100000001;2;Field   ;
                ApplicationArea=#all;
                SourceExpr="Order Line No." }

    { 39  ;1   ;Group     ;
                GroupType=Group }

    { 33  ;2   ;Group     ;
                GroupType=Group }

    { 25  ;3   ;Field     ;
                Name=AmountBeforeDiscount;
                CaptionML=[ENU=Subtotal Excl. VAT;
                           ENG=Subtotal Excl. VAT];
                ToolTipML=[ENU=Specifies the sum of the value in the Line Amount Excl. VAT field on all lines in the document.;
                           ENG=Specifies the sum of the value in the Line Amount Excl. VAT field on all lines in the document.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalPurchaseLine."Line Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=DocumentTotals.GetTotalLineAmountWithVATAndCurrencyCaption(Currency.Code,TotalPurchaseHeader."Prices Including VAT");
                Editable=FALSE }

    { 31  ;3   ;Field     ;
                Name=InvoiceDiscountAmount;
                CaptionML=[ENU=Invoice Discount Amount;
                           ENG=Invoice Discount Amount];
                ToolTipML=[ENU=Specifies a discount amount that is deducted from the value in the Total Incl. VAT field. You can enter or change the amount manually.;
                           ENG=Specifies a discount amount that is deducted from the value in the Total Incl. VAT field. You can enter or change the amount manually.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=InvoiceDiscountAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=DocumentTotals.GetInvoiceDiscAmountWithVATAndCurrencyCaption(FIELDCAPTION("Inv. Discount Amount"),Currency.Code);
                Editable=InvDiscAmountEditable;
                OnValidate=BEGIN
                             DocumentTotals.PurchaseDocTotalsNotUpToDate;
                             ValidateInvoiceDiscountAmount;
                           END;
                            }

    { 29  ;3   ;Field     ;
                Name=Invoice Disc. Pct.;
                CaptionML=[ENU=Invoice Discount %;
                           ENG=Invoice Discount %];
                ToolTipML=[ENU=Specifies a discount amount that is deducted from the value in the Total Incl. VAT field. You can enter or change the amount manually.;
                           ENG=Specifies a discount amount that is deducted from the value in the Total Incl. VAT field. You can enter or change the amount manually.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:3;
                SourceExpr=InvoiceDiscountPct;
                Editable=InvDiscAmountEditable;
                OnValidate=BEGIN
                             DocumentTotals.PurchaseDocTotalsNotUpToDate;
                             AmountWithDiscountAllowed := DocumentTotals.CalcTotalPurchAmountOnlyDiscountAllowed(Rec);
                             InvoiceDiscountAmount := ROUND(AmountWithDiscountAllowed * InvoiceDiscountPct / 100,Currency."Amount Rounding Precision");
                             ValidateInvoiceDiscountAmount;
                           END;
                            }

    { 15  ;2   ;Group     ;
                GroupType=Group }

    { 13  ;3   ;Field     ;
                Name=Total Amount Excl. VAT;
                DrillDown=No;
                CaptionML=[ENU=Total Amount Excl. VAT;
                           ENG=Total Amount Excl. VAT];
                ToolTipML=[ENU=Specifies the sum of the value in the Line Amount Excl. VAT field on all lines in the document minus any discount amount in the Invoice Discount Amount field.;
                           ENG=Specifies the sum of the value in the Line Amount Excl. VAT field on all lines in the document minus any discount amount in the Invoice Discount Amount field.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalPurchaseLine.Amount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=DocumentTotals.GetTotalExclVATCaption(Currency.Code);
                Editable=FALSE }

    { 11  ;3   ;Field     ;
                Name=Total VAT Amount;
                CaptionML=[ENU=Total VAT;
                           ENG=Total VAT];
                ToolTipML=[ENU=Specifies the sum of the value in the Line Amount Excl. VAT field on all lines in the document minus any discount amount in the Invoice Discount Amount field.;
                           ENG=Specifies the sum of the value in the Line Amount Excl. VAT field on all lines in the document minus any discount amount in the Invoice Discount Amount field.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=VATAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=DocumentTotals.GetTotalVATCaption(Currency.Code);
                Editable=FALSE }

    { 9   ;3   ;Field     ;
                Name=Total Amount Incl. VAT;
                CaptionML=[ENU=Total Amount Incl. VAT;
                           ENG=Total Amount Incl. VAT];
                ToolTipML=[ENU=Specifies the sum of the value in the Line Amount Incl. VAT field on all lines in the document minus any discount amount in the Invoice Discount Amount field.;
                           ENG=Specifies the sum of the value in the Line Amount Incl. VAT field on all lines in the document minus any discount amount in the Invoice Discount Amount field.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalPurchaseLine."Amount Including VAT";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=DocumentTotals.GetTotalInclVATCaption(Currency.Code);
                Editable=FALSE }

  }
  CODE
  {
    VAR
      Currency@1026 : Record 4;
      PurchasesPayablesSetup@1013 : Record 312;
      TotalPurchaseHeader@1008 : Record 38;
      TotalPurchaseLine@1007 : Record 39;
      TempOptionLookupBuffer@1004 : TEMPORARY Record 1670;
      TransferExtendedText@1002 : Codeunit 378;
      ItemAvailFormsMgt@1006 : Codeunit 353;
      PurchCalcDiscByType@1010 : Codeunit 66;
      DocumentTotals@1009 : Codeunit 57;
      ShortcutDimCode@1003 : ARRAY [8] OF Code[20];
      VATAmount@1031 : Decimal;
      InvoiceDiscountAmount@1030 : Decimal;
      InvoiceDiscountPct@1017 : Decimal;
      AmountWithDiscountAllowed@1000 : Decimal;
      IsFoundation@1005 : Boolean;
      InvDiscAmountEditable@1016 : Boolean;
      IsCommentLine@1019 : Boolean;
      UnitofMeasureCodeIsChangeable@1001 : Boolean;
      CurrPageIsEditable@1015 : Boolean;
      IsBlankNumber@1029 : Boolean;
      TypeAsText@1011 : Text[30];
      ItemChargeStyleExpression@1012 : Text;
      DimVisible1@1028 : Boolean;
      DimVisible2@1027 : Boolean;
      DimVisible3@1025 : Boolean;
      DimVisible4@1024 : Boolean;
      DimVisible5@1023 : Boolean;
      DimVisible6@1022 : Boolean;
      DimVisible7@1021 : Boolean;
      DimVisible8@1018 : Boolean;

    [External]
    PROCEDURE ApproveCalcInvDisc@7();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Purch.-Disc. (Yes/No)",Rec);
      DocumentTotals.PurchaseDocTotalsNotUpToDate;
    END;

    LOCAL PROCEDURE ValidateInvoiceDiscountAmount@22();
    VAR
      PurchaseHeader@1000 : Record 38;
    BEGIN
      PurchaseHeader.GET("Document Type","Document No.");
      PurchCalcDiscByType.ApplyInvDiscBasedOnAmt(InvoiceDiscountAmount,PurchaseHeader);
      DocumentTotals.PurchaseDocTotalsNotUpToDate;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ExplodeBOM@3();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Purch.-Explode BOM",Rec);
      DocumentTotals.PurchaseDocTotalsNotUpToDate;
    END;

    LOCAL PROCEDURE GetReceipt@4();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Purch.-Get Receipt",Rec);
      DocumentTotals.PurchaseDocTotalsNotUpToDate;
    END;

    [External]
    PROCEDURE InsertExtendedText@6(Unconditionally@1000 : Boolean);
    BEGIN
      OnBeforeInsertExtendedText(Rec);
      IF TransferExtendedText.PurchCheckIfAnyExtText(Rec,Unconditionally) THEN BEGIN
        CurrPage.SAVERECORD;
        TransferExtendedText.InsertPurchExtText(Rec);
      END;
      IF TransferExtendedText.MakeUpdate THEN
        UpdateForm(TRUE);
    END;

    [External]
    PROCEDURE UpdateForm@12(SetSaveRecord@1000 : Boolean);
    BEGIN
      CurrPage.UPDATE(SetSaveRecord);
    END;

    LOCAL PROCEDURE NoOnAfterValidate@19066594();
    BEGIN
      UpdateEditableOnRow;
      InsertExtendedText(FALSE);
      IF (Type = Type::"Charge (Item)") AND ("No." <> xRec."No.") AND
         (xRec."No." <> '')
      THEN
        CurrPage.SAVERECORD;
    END;

    LOCAL PROCEDURE UpdateEditableOnRow@14();
    BEGIN
      UnitofMeasureCodeIsChangeable := Type <> Type::" ";
      IsCommentLine := Type = Type::" ";
      CurrPageIsEditable := CurrPage.EDITABLE;
      IsBlankNumber := "No." = '';
      InvDiscAmountEditable := CurrPageIsEditable AND NOT PurchasesPayablesSetup."Calc. Inv. Discount";
    END;

    LOCAL PROCEDURE GetTotalPurchHeader@13();
    BEGIN
      DocumentTotals.GetTotalPurchaseHeaderAndCurrency(Rec,TotalPurchaseHeader,Currency);
    END;

    LOCAL PROCEDURE CalculateTotals@25();
    BEGIN
      DocumentTotals.PurchaseCheckIfDocumentChanged(Rec,xRec);
      DocumentTotals.CalculatePurchaseSubPageTotals(
        TotalPurchaseHeader,TotalPurchaseLine,VATAmount,InvoiceDiscountAmount,InvoiceDiscountPct);
      DocumentTotals.RefreshPurchaseLine(Rec);
    END;

    LOCAL PROCEDURE DeltaUpdateTotals@1();
    BEGIN
      DocumentTotals.PurchaseDeltaUpdateTotals(Rec,xRec,TotalPurchaseLine,VATAmount,InvoiceDiscountAmount,InvoiceDiscountPct);
    END;

    LOCAL PROCEDURE UpdateTypeText@10();
    VAR
      RecRef@1000 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Rec);
      TypeAsText := TempOptionLookupBuffer.FormatOption(RecRef.FIELD(FIELDNO(Type)));
    END;

    LOCAL PROCEDURE SetItemChargeFieldsStyle@2();
    BEGIN
      ItemChargeStyleExpression := '';
      IF AssignedItemCharge THEN
        ItemChargeStyleExpression := 'Unfavorable';
    END;

    LOCAL PROCEDURE SetDimensionsVisibility@11();
    VAR
      DimMgt@1000 : Codeunit 408;
    BEGIN
      DimVisible1 := FALSE;
      DimVisible2 := FALSE;
      DimVisible3 := FALSE;
      DimVisible4 := FALSE;
      DimVisible5 := FALSE;
      DimVisible6 := FALSE;
      DimVisible7 := FALSE;
      DimVisible8 := FALSE;

      DimMgt.UseShortcutDims(
        DimVisible1,DimVisible2,DimVisible3,DimVisible4,DimVisible5,DimVisible6,DimVisible7,DimVisible8);

      CLEAR(DimMgt);
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeInsertExtendedText@9(VAR PurchaseLine@1000 : Record 39);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnCrossReferenceNoOnLookup@5(VAR PurchaseLine@1000 : Record 39);
    BEGIN
    END;

    BEGIN
    END.
  }
}

